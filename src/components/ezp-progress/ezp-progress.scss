/**
 *
 * Modules
 *
 */

@use './ezp-progress.m' as self;
@use './../../shared/global.m' as global;

/**
 *
 * Rules
 *
 */

:host {
  /** @prop --box-separator-position: Description... */
  --box-separator-position: 0 0 0 var(--hairline-width-positive);

  /** @prop --duration: Description... */
  --duration: 1s;

  /** @prop --indicator-size: Description... */
  --indicator-size: 44px;

  /** @prop --stroke-width: Description... */
  --stroke-width: 4;

  align-content: center;
  align-items: center;
  background: var(--color-overlay);
  border-radius: 8px;
  box-sizing: border-box;
  display: grid;
  grid-template: auto / auto;
  height: 100%;
  justify-content: center;
  justify-items: center;
  left: 0;
  padding: var(--spacing-6);
  position: absolute;
  top: 0;
  width: 100%;
  z-index: 9999;

  @include global.media-appearance('dark') {
    --box-separator-position: inset 0 0 0 var(--hairline-width-positive);
  }
}

#box {
  background: var(--color-surface-tertiary);
  border-radius: 3px;
  box-shadow: var(--box-separator-position) var(--color-outline-translucent-tertiary);
  display: grid;
  grid-row-gap: var(--spacing-2);
  grid-template-columns: 1fr;
  grid-template-rows: repeat(2, auto);
  justify-items: center;
  padding: var(--spacing-4);
}

#indicator {
  animation: rotate var(--duration) linear infinite;
  display: block;
  height: var(--indicator-size);
  transform: rotate(0);
  width: var(--indicator-size);
}

#track {
  fill: none;
  stroke: var(--color-outline-translucent-secondary);
  stroke-width: var(--stroke-width);
}

#value {
  animation: offset var(--duration) linear alternate infinite;
  fill: none;
  stroke: var(--color-main-primary);
  stroke-dasharray: 100;
  stroke-dashoffset: 100;
  stroke-linecap: round;
  stroke-width: var(--stroke-width);
}

#status {
  color: var(--color-foreground-primary);
}

/**
 *
 * Keyframes
 *
 */

@keyframes offset {
  100% {
    stroke-dashoffset: 50;
  }
}

@keyframes rotate {
  100% {
    transform: rotate(360deg);
  }
}
