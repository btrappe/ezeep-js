# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js Build

env:
  MAJOR_VERSION: 1          # update MAJOR and MINOR version here
  MINOR_VERSION: 0
  PATCH_VERSION: ${{ github.run_number }}
  MODULE_VERSION: '${{ env.MAJOR_VERSION }}.${{ env.MINOR_VERSION }}.${{ env.PATCH_VERSION }}'
  DIST_PATH: 'dist/ezeep'                          # deployment path
  ARTIFACT_NAME: 'ezeep-js.zip'                    # artifact name
  PRERELEASE: false                                 # true if marked as pre-release, false if production-ready

on:
  push:
    branches: [ main ]

jobs:
  build:
    environment: Production
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Bump version in package.json
    - uses: copapow/version-bump-package@v1
      id: bump
      with:
          major_label: ${{ env.MAJOR_VERSION }}
          minor_label: ${{ env.MINOR_VERSION }}
          patch_label: ${{ env.PATCH_VERSION }}
          default_branch: main       
          github_token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Build
      run: |
        npm ci
        npm run build

    - name: Archive Artifacts
      uses: actions/upload-artifact@v2
      with:
        path: ${{ env.DIST_PATH }}
        name: ${{ env.ARTIFACT_NAME }}

    - name: ZIP Release
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        directory: ${{ env.DIST_PATH }}
        path: '.'
        filename: ${{ env.ARTIFACT_NAME }}

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        tag: "${{ env.MODULE_VERSION }}"
        prerelease: ${{ env.PRERELEASE }}
        artifacts: "${{ env.DIST_PATH }}/${{ env.ARTIFACT_NAME }}"
        token: ${{ secrets.GITHUB_TOKEN }}

  publish:
    environment: Production
    needs: build
    runs-on: ubuntu-latest
    steps:

    - uses: actions/download-artifact@v2
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: "artifacts/v${{ env.MODULE_VERSION }}"

    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Upload to blob storage
      uses: azure/CLI@v1
      with:
        azcliversion: 2.27.1
        inlineScript: |
          azenv='${{ secrets.AZURE_ENVIRONMENT }}'
          account=$(jq -crM .storage.account <<< $azenv)
          container=$(jq -crM .storage.container <<< $azenv)

          az storage blob upload-batch \
            --auth-mode login \
            --account-name $account \
            -d $container \
            -s "artifacts" \
            -o none

    - name: Update Url redirect
      uses: azure/CLI@v1
      with:
        azcliversion: 2.27.1
        inlineScript: |
          azenv='${{ secrets.AZURE_ENVIRONMENT }}'
          resourceGroup=$(jq -crM .resourceGroup <<< $azenv)
          profile=$(jq -crM .cdn.profileName <<< $azenv)
          endpoint=$(jq -crM .cdn.endpoint.name <<< $azenv)
          rules=$(jq -crM .cdn.endpoint.rules[].name <<< $azenv)
          container=$(jq -crM .storage.container <<< $azenv)

          for rule in $rules; do
            fileName=$(jq -crM --arg rule "$rule" \
              '.cdn.endpoint.rules[]
              | select(.name == $rule)
              | .fileName' \
              <<< $azenv)

            index=$(az cdn endpoint rule action show  \
                  -g $resourceGroup \
                  --profile-name $profile \
                  -n $endpoint \
                  | jq --arg rule "$rule" '.deliveryPolicy.rules[]
                      | select(.name == $rule)
                      | .actions | to_entries | .[]
                      | select(.value.name == "UrlRedirect") | .key' \
                  )

            az cdn endpoint rule action remove \
              -g $resourceGroup \
              --profile-name $profile \
              -n $endpoint \
              --rule-name $rule \
              --index $index \
              -o none

            az cdn endpoint rule action add  \
              -g $resourceGroup \
              --profile-name $profile \
              -n $endpoint \
              --rule-name $rule \
              --action-name UrlRedirect \
              --custom-path "/$container/v${{ env.MODULE_VERSION }}/$fileName" \
              --redirect-type Found \
              -o none
          done

    - name: Purge CDN endpoint
      uses: azure/CLI@v1
      with:
        azcliversion: 2.27.1
        inlineScript: |
           azenv='${{ secrets.AZURE_ENVIRONMENT }}'
           resourceGroup=$(jq -crM .resourceGroup <<< $azenv)
           profile=$(jq -crM .cdn.profileName <<< $azenv)
           endpoint=$(jq -crM .cdn.endpoint.name <<< $azenv)
           container=$(jq -crM .storage.container <<< $azenv)

           az cdn endpoint purge \
             -g $resourceGroup \
             --profile-name $profile \
             -n $endpoint \
             --content-paths "/$container/*" \
             --no-wait \
             -o none

    - name: logout
      run: |
        az logout
      if: always()
